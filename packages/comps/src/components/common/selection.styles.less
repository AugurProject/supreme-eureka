@import (reference) "~assets/styles/shared";

.Dropdown {
  border: @size-1 solid var(--color-secondary-action-outline);
  border-radius: @border-radius-default;
  cursor: pointer;
  display: flex;
  position: relative;
  width: 100%;

  > span {
    display: none;
  }

  > select {
    display: none;
  }

  > button {
    align-items: center;
    border-radius: @border-radius-default;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    white-space: nowrap;
    width: 100%;
    background: var(--color-secondary-action);
    color: var(--simple-primary-text);
    cursor: pointer;

    > b {
      margin-right: auto;
    }

    // arrow
    > svg {
      height: @size-6;
      margin: 0 @size-1 0 @size-13;
      width: @size-10;

      > path {
        fill: var(--simple-secondary-text);
      }
    }

    &:hover {
      border: @size-1 solid var(--simple-secondary-text);
    }

    &:focus {
      outline: 0;
    }

    &:focus-visible {
      border: @size-1 solid var(--simple-focus-color);
      box-shadow: inset 0 0 0 @size-2 var(--simple-focus-color);
    }

    &:active {
      border: @size-1 solid var(--simple-secondary-text);
    }
  }

  // div wrapper for hover state when margin-top is not zero.
  > div {
    .FixedBoxShadow;

    min-width: 100%;
    max-height: @size-380;
    overflow-y: auto;
    position: absolute;
    top: 106%;
    z-index: @default-above;
    border-radius: @size-8;

    > div:first-of-type {
      .SimpleBorder;

      background-color: var(--simple-light-bg);
      display: none;
      overflow-x: hidden;

      &.active {
        display: block;
      }

      > button {
        .text-16-semi-bold;

        color: var(--simple-secondary-text);
        background-color: var(--simple-light-bg);
        position: relative;
        text-align: left;
        white-space: nowrap;
        width: 100%;
        border: 0;
        padding: @size-16 @size-24;
        cursor: pointer;
        text-transform: capitalize;

        &:hover {
          color: var(--simple-primary-text);
        }

        &:focus {
          outline: 0;
        }

        &.Selected {
          color: var(--simple-primary-text);
        }

        &:disabled {
          cursor: not-allowed;
          color: var(--simple-secondary-text);
        }

        > svg {
          display: none;
          margin-left: @size-4;
        }
      }
    }
  }

  &:focus {
    outline: none;
  }
}

.label {
  display: flex;

  > span {
    .text-16-bold;

    color: var(--simple-primary-text);
    text-transform: capitalize;
  }

  &.Selected {
    display: flex;
  }
}

.SelectedLabel {
  color: var(--simple-primary-text);

  &.invalidColor {
    color: var(--theme-outcome-0);
  }
}

// Used in expiration date selection and top section in outcome candlesticks
.Normal {
  .Dropdown;

  max-width: fit-content;
  max-width: -moz-fit-content;
  border: 0;

  > button {
    .text-10-semi-bold;
    .SimpleBorder;

    background: var(--simple-alternate-background);
    padding: @size-12 @size-18 @size-12 @size-16;
    display: flex;
    align-items: center;
    justify-content: center;

    // vertical line before arrow icon
    > span {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      flex: 1;
      display: flex;
    }

    // arrow
    > svg {
      margin-left: @size-46;
      display: flex;
      width: @size-15;
      height: @size-9;
    }
  }

  > div {
    width: fit-content;

    > div {
      width: 100%;
    }
  }
}

.isOpen {
  > button {
    border: @size-1 solid var(--simple-secondary-text);

    // arrow
    > svg {
      transform: rotate(180deg);
    }
  }
}

.openTop {
  > div {
    bottom: 106%;
    top: unset;
  }
}

.Labeled {
  display: flex;
  flex-flow: row nowrap;

  > span {
    .text-14;

    color: var(--simple-secondary-text);
    display: flex;
    flex-flow: row nowrap;
    white-space: nowrap;
    align-items: center;
    justify-content: center;
    margin-right: @size-4;
  }

  > button {
    color: var(--simple-primary-text);
    border: 0;
    background: transparent;
    padding: 0;

    &:focus {
      outline: 0;
    }

    &:hover {
      border: 0;
    }

    > span {
      .text-14;

      border-bottom: @size-1 dotted var(--simple-primary-text);;

      &:hover {
        border-bottom: @size-1 solid var(--simple-primary-text);;
      }
    }

    > svg {
      margin-left: @size-4;
      height: @size-5;
      width: @size-9;

      > path {
        fill: var(--simple-primary-text);;
      }
    }
  }

  > div {
    .PrimaryBorderRadius;

    > div:first-of-type {
      padding: @size-12 @size-16;
    
      > button {
        .text-14;

        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: space-between;
        padding: @size-12 0 @size-11;
        border-bottom: @size-1 solid var(--simple-border);

        > svg {
          display: block;
        }

        &:first-of-type {
          .PrimaryTopBorderRadius;

          padding-top: 0;
        }

        &:last-of-type {
          .PrimaryBottomBorderRadius;

          padding-bottom: 0;
          border-bottom: 0;
        }
      }
    }
  }
}

// Used in outcome selector in order ticket
.showColor {
  position: relative;

  &::before {
    width: @size-2;
    content: "";
    position: absolute;
    top: @size-1;
    left: @size-1;
    bottom: @size-1;
    border-top-left-radius: @size-3;
    border-bottom-left-radius: @size-3;
  }

  .generate-trading-indexed-color-outcome-classes({
    &.showColor-@{newIndex} {
      &::before {
        background-color: @value;
      };
    }
  });
}

.MenuOpen {
  > button > svg {
    fill: var(--simple-primary-text);
  }
}

.MenuItems {
  .text-12-medium;

  align-items: flex-start;
  background: var(--color-secondary-action);
  border-radius: @border-radius-default;
  border: 1px solid var(--color-secondary-action-outline);
  color: var(--simple-primary-text);
  display: flex;
  flex-direction: column;
  justify-content: center;
  position: absolute;
  right: 0;
  top: 36px;
  user-select: none;
  width: 189px;
  z-index: @default-above;
  outline: none;

  > div {
    align-items: center;
    display: flex;
    justify-content: flex-start;
    flex-flow: row wrap;
    width: 100%;
    height: @size-32;
    padding: @size-8 @size-12;
    outline: none;

    &:not(:last-of-type) {
      &::after {
        content: "";
        height: 1px;
        background: var(--color-secondary-action-outline);
        width: 100%;
        position: relative;
        top: 7px;
      }
    }
  }

  > div:hover {
    background: var(--color-secondary-hover);
  }
}

.CurrencyDropdown {
  background-color: var(--simple-light-bg);
  border: 0;
  border-radius: @size-8;

  > button {
    background-color: transparent;
    border: 0;
    align-items: center;
    padding: 0 @size-8;
    border-radius: @size-8;

    > span {
      .text-16-semi-bold;

      margin-right: @size-8;
      margin-left: @size-4;
      justify-content: center;
      align-items: center;
      display: flex;

      > svg {
        margin-right: @size-4;
        height: @size-22;
        width: @size-22;
      }
    }

    > svg {
      margin-left: 0;
      height: @size-6;
      width: @size-10;

      > path {
        fill: var(--simple-primary-text);
      }
    }

    &:hover,
    &:active,
    &:focus {
      border: 0;
      outline: 0;
    }
  }

  &:hover,
  &:active,
  &:focus {
    border: 0;
    outline: 0;
  }
}

.SelectionGroup {
  > span {
    .text-16;

    color: var(--simple-primary-text);
    text-transform: capitalize;
    margin-bottom: @size-10;
    display: flex;
  }

  > div {
    display: flex;
    flex-flow: row wrap;

    > div {
      margin-right: @size-8;
      margin-bottom: @size-8;
    }
  }
}

.SharedSelectionItem {
  .SimpleBorder;

  padding: @size-10 @size-12;
  display: flex;
  align-items: center;

  > input {
    width: @size-20;
    height: @size-20;
    margin: 0;
    display: flex;
    pointer-events: none;
  }

  > span {
    .text-16-semi-bold;

    color: var(--simple-secondary-text);
    text-transform: capitalize;
    white-space: nowrap;
    margin-left: @size-8;
  }

  &.Selected {
    > span {
      color: var(--simple-primary-text);
    }
  }
}

.Checkbox {
  .SharedSelectionItem;
}

.RadioBar {
  .SharedSelectionItem;

  > input {
    width: @size-20;
    height: @size-20;
    margin: 0;
    display: flex;
  }
}

.list {
  display: flex;
}

.SmallDropdown {
  > button {
    padding: @size-12;
    background-color: var(--simple-light-bg);

    > span {
      .text-12-semi-bold;
    }

    > svg {
      width: @size-10;
      height: @size-6;

      > path {
        fill: var(--simple-secondary-text);
      }
    }
  }
}

.MultiButtonSelection {
  display: flex;
  flex-flow: row nowrap;
  grid-gap: @size-4;

  > li > button {
    .RoundedButton;
  }
}
